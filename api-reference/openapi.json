{
  "openapi": "3.0.1",
  "info": {
    "title": "Accounts Service",
    "description": "Service for managing Physical and Virtual Accounts.",
    "contact": {
      "name": "Methodic",
      "url": "https://www.methodic.com",
      "email": "info@methodic.com"
    },
    "version": "v1"
  },
  "servers": [
    {
      "url": "https://accounts.brenda.meth.wtf/"
    }
  ],
  "security": [
    {
      "oauth2": []
    }
  ],
  "paths": {
    "/health": {
      "get": {
        "tags": [
          "Health"
        ],
        "summary": "Basic ping health endpoint",
        "operationId": "Health_Health",
        "responses": {
          "200": {
            "description": "",
            "content": {}
          },
          "409": {
            "description": "Business Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Unhandled Internal Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/Physical": {
      "get": {
        "tags": [
          "Physical"
        ],
        "summary": "Gets physical account by account filter",
        "operationId": "GetPhysicalAccountsByAccountFilter",
        "parameters": [
          {
            "name": "AccountName",
            "in": "query",
            "description": "The name of the account\n            ",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "AccountNumber",
            "in": "query",
            "description": "The account number\n            ",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "BankCode",
            "in": "query",
            "description": "The Bank Identification Code (BIC) of the institution providing the account\n            ",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "BranchCode",
            "in": "query",
            "description": "The branch code of the institution providing the account\n            ",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "SWIFTCode",
            "in": "query",
            "description": "The SWIFT code of the institution providing the account\n            ",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "BIC",
            "in": "query",
            "description": "The Bank Identification Code (BIC)/SWIFT code of the institution providing the account   \n            ",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Group",
            "in": "query",
            "description": "Any free-form grouping of accounts\n            ",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "ProductIds",
            "in": "query",
            "description": "The primary ID of the product associated to the account\n            ",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "nullable": true,
              "items": {
                "type": "string",
                "format": "guid"
              }
            }
          },
          {
            "name": "ProviderId",
            "in": "query",
            "description": "The ID of the provider associated to the account\n            ",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "ExternalId",
            "in": "query",
            "description": "The unique identifier of the account at the external counter-party who provides it\n            ",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "ProviderType",
            "in": "query",
            "description": "The type of provider associated to the account\n            ",
            "schema": {
              "type": "string",
              "nullable": true,
              "enum": [
                "Bank",
                "Broking",
                "Custody",
                "Ev",
                "Fx",
                "Payment",
                "Pricing"
              ],
              "x-schema": {
                "$ref": "#/definitions/ProviderType"
              }
            },
            "x-schema": {
              "$ref": "#/definitions/ProviderType"
            }
          },
          {
            "name": "ExternalReference",
            "in": "query",
            "description": "A human-readable account reference provided by an external counter-party\n            ",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "AccountStatus",
            "in": "query",
            "description": "The status of the account\n            ",
            "schema": {
              "type": "string",
              "nullable": true,
              "enum": [
                "Undefined",
                "Pending",
                "Active",
                "Declined",
                "Activating"
              ],
              "x-schema": {
                "$ref": "#/definitions/AccountStatus"
              }
            },
            "x-schema": {
              "$ref": "#/definitions/AccountStatus"
            }
          },
          {
            "name": "InvestorId",
            "in": "query",
            "description": "The identifier of the Investor that owns this account, if this is an Investor Account",
            "schema": {
              "type": "string",
              "format": "guid",
              "nullable": true
            }
          },
          {
            "name": "AccountType",
            "in": "query",
            "description": "The type or purpose of the account.",
            "schema": {
              "type": "string",
              "nullable": true,
              "enum": [
                "Undefined",
                "Omnibus",
                "Clearing",
                "Investor"
              ],
              "x-schema": {
                "$ref": "#/definitions/PhysicalAccountType"
              }
            },
            "x-schema": {
              "$ref": "#/definitions/PhysicalAccountType"
            }
          },
          {
            "name": "CreatedUTCDateTimeOnOrAfter",
            "in": "query",
            "description": "Select only those Accounts Created on or after a particular point in time\nUse in conjunction with CreatedUTCDateTimeOnOrBefore to filter a range of dates",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "CreatedUTCDateTimeOnOrBefore",
            "in": "query",
            "description": "Select only those Accounts Created on or before a particular point in time\nUse in conjunction with CreatedUTCDateTimeOnOrAfter to filter a range of dates",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "NameContains",
            "in": "query",
            "description": "Filter for accounts whose name contains this value\n            ",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "The desired page of results (first page = 1)",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "The desired number of results per page",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; v=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedEnumerableOfPhysicalAccount"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json; v=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Business Error",
            "content": {
              "application/json; v=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Unhandled Internal Error",
            "content": {
              "application/json; v=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Physical"
        ],
        "summary": "Creates physical account (admin only)",
        "operationId": "CreatePhysicalAccount",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PhysicalAccountCreationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json; v=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/PhysicalAccount"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json; v=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json; v=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "",
            "content": {
              "application/json; v=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Unhandled Internal Error",
            "content": {
              "application/json; v=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "request"
      }
    },
    "/Physical/{id}": {
      "get": {
        "tags": [
          "Physical"
        ],
        "summary": "Gets physical account by id",
        "operationId": "GetPhysicalAccountById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A guid uniquely identifying the physical account",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid",
              "nullable": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; v=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/PhysicalAccount"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json; v=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Business Error",
            "content": {
              "application/json; v=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Unhandled Internal Error",
            "content": {
              "application/json; v=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Physical"
        ],
        "summary": "Updates a physical account",
        "operationId": "UpdatePhysicalAccount",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A guid uniquely identifying the physical account",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid",
              "nullable": false
            }
          }
        ],
        "requestBody": {
          "description": "A set of account details to be used for the update. Only include the parameters you wish to change and delete the others",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PhysicalAccountModificationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; v=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/PhysicalAccount"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json; v=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json; v=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Business Error",
            "content": {
              "application/json; v=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Unhandled Internal Error",
            "content": {
              "application/json; v=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "request"
      }
    },
    "/Virtual": {
      "get": {
        "tags": [
          "Virtual"
        ],
        "summary": "Gets virtual accounts by account filter.",
        "operationId": "GetVirtualAccountsByAccountFilter",
        "parameters": [
          {
            "name": "PhysicalId",
            "in": "query",
            "description": "The primary ID of the parent physical account\n            ",
            "schema": {
              "type": "string",
              "format": "guid",
              "nullable": true
            }
          },
          {
            "name": "PhysicalIds",
            "in": "query",
            "description": "The primary IDs of the parent physical account\n            ",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "nullable": true,
              "items": {
                "type": "string",
                "format": "guid"
              }
            }
          },
          {
            "name": "InvestorId",
            "in": "query",
            "description": "The primary ID of an owner of a virtual account. Mutually exclusive with InvestorIds.\n            ",
            "schema": {
              "type": "string",
              "format": "guid",
              "nullable": true
            }
          },
          {
            "name": "InvestorIds",
            "in": "query",
            "description": "The primary IDs of any owners of a virtual account\n            ",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "nullable": true,
              "items": {
                "type": "string",
                "format": "guid"
              }
            }
          },
          {
            "name": "VirtualAccountIds",
            "in": "query",
            "description": "List of IDs of virtual accounts being requested\n            ",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "nullable": true,
              "items": {
                "type": "string",
                "format": "guid"
              }
            }
          },
          {
            "name": "ProductId",
            "in": "query",
            "description": "The primary ID of the product associated to a virtual account's physical account\n            ",
            "schema": {
              "type": "string",
              "format": "guid",
              "nullable": true
            }
          },
          {
            "name": "ProductIds",
            "in": "query",
            "description": "The primary ID of the product associated to a virtual account's physical account\n            ",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "nullable": true,
              "items": {
                "type": "string",
                "format": "guid"
              }
            }
          },
          {
            "name": "ProviderId",
            "in": "query",
            "description": "The ID of the provider associated to a virtual account's physical account\n            ",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "AccountType",
            "in": "query",
            "description": "The Account Type\n            ",
            "schema": {
              "type": "string",
              "nullable": true,
              "enum": [
                "Undefined",
                "IndividualTrader",
                "TradingAdvisor",
                "IntroducingBroker",
                "Custodial",
                "Beneficiary",
                "Institutional",
                "Company",
                "Investor",
                "Operational",
                "Receivables",
                "Margin",
                "Payables",
                "OutgoingOrders",
                "IncomingOrders",
                "BuyingPower",
                "DelinquentReceivables",
                "OutgoingFx",
                "IncomingFx",
                "Clearing",
                "IncomingTransfers",
                "OutgoingTransfers",
                "FeeIncome",
                "UnallocatedCAReceipts",
                "UnallocatedCAWithdrawals",
                "Float",
                "FloatLoan",
                "FundedTransfers",
                "FeeExpense",
                "Withholding",
                "Suspense",
                "Interest",
                "InterestIncome",
                "InterestExpense",
                "TaxWithheld",
                "Portfolio"
              ],
              "x-schema": {
                "$ref": "#/definitions/VirtualAccountType"
              }
            },
            "x-schema": {
              "$ref": "#/definitions/VirtualAccountType"
            }
          },
          {
            "name": "ProviderType",
            "in": "query",
            "description": "The provider type\n            ",
            "schema": {
              "type": "string",
              "nullable": true,
              "enum": [
                "Bank",
                "Broking",
                "Custody",
                "Ev",
                "Fx",
                "Payment",
                "Pricing"
              ],
              "x-schema": {
                "$ref": "#/definitions/ProviderType"
              }
            },
            "x-schema": {
              "$ref": "#/definitions/ProviderType"
            }
          },
          {
            "name": "AccountStatus",
            "in": "query",
            "description": "The status of the account, for backward compatibility if not specified, the system assumes Active Accounts only. \n            ",
            "schema": {
              "type": "string",
              "nullable": true,
              "enum": [
                "Undefined",
                "Active",
                "Suspended"
              ],
              "x-schema": {
                "$ref": "#/definitions/VirtualAccountStatus"
              }
            },
            "x-schema": {
              "$ref": "#/definitions/VirtualAccountStatus"
            }
          },
          {
            "name": "ExternalReference",
            "in": "query",
            "description": "Reference to be used by Investors when making deposits etc.",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "ExternalAccountNumber",
            "in": "query",
            "description": "Account Number to be used by Investors when making deposits etc.\n            ",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "NameContains",
            "in": "query",
            "description": "Filter for accounts whose name contains this value.\n            ",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "NameIsExactly",
            "in": "query",
            "description": "Filter for accounts whose name matches the suppliced value exactly.\n            ",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "CreatedUTCDateTimeOnOrAfter",
            "in": "query",
            "description": "Select only those Accounts Created on or after a particular point in time\nUse in conjunction with CreatedUTCDateTimeOnOrBefore to filter a range of dates",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "CreatedUTCDateTimeOnOrBefore",
            "in": "query",
            "description": "Select only those Accounts Created on or before a particular point in time\nUse in conjunction with CreatedUTCDateTimeOnOrAfter to filter a range of dates",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "The desired page of results (first page = 1)",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "The desired number of results per page",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; v=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedEnumerableOfVirtualAccount"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json; v=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Business Error",
            "content": {
              "application/json; v=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Unhandled Internal Error",
            "content": {
              "application/json; v=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Virtual"
        ],
        "summary": "Creates a virtual account (admin only).",
        "operationId": "CreateVirtualAccount",
        "requestBody": {
          "description": "A set of required account data used for creation.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VirtualAccountCreationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; v=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/VirtualAccount"
                }
              }
            }
          },
          "201": {
            "description": "",
            "content": {
              "application/json; v=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/VirtualAccount"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json; v=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json; v=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "",
            "content": {
              "application/json; v=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Unhandled Internal Error",
            "content": {
              "application/json; v=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "accountRequest"
      }
    },
    "/Virtual/{id}": {
      "get": {
        "tags": [
          "Virtual"
        ],
        "summary": "Gets a virtual account by its identifier.",
        "operationId": "GetVirtualAccountById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A unique identifier of the virtual account.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid",
              "nullable": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; v=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/VirtualAccount"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json; v=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json; v=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Business Error",
            "content": {
              "application/json; v=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Unhandled Internal Error",
            "content": {
              "application/json; v=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Virtual"
        ],
        "summary": "Updates a virtual account.",
        "operationId": "UpdateVirtualAccount",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A unique identifier of the virtual account.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid",
              "nullable": false
            }
          }
        ],
        "requestBody": {
          "description": "A set of account details to be used for the update. Only include the parameters you wish to change and delete the others",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VirtualAccountModificationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; v=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/VirtualAccount"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json; v=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json; v=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json; v=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Business Error",
            "content": {
              "application/json; v=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Unhandled Internal Error",
            "content": {
              "application/json; v=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "request"
      }
    }
  },
  "components": {
    "schemas": {
      "AccountingPurpose": {
        "type": "string",
        "description": "\r\n\r\nPossible values:\r\nUndefined\nAssets\nContraAssets\nCapital\nDrawings\nExpenses\nIncome\nLiabilities\nContraLiabilities",
        "enum": [
          "Undefined",
          "Assets",
          "ContraAssets",
          "Capital",
          "Drawings",
          "Expenses",
          "Income",
          "Liabilities",
          "ContraLiabilities"
        ],
        "x-enumNames": [
          "Undefined",
          "Assets",
          "ContraAssets",
          "Capital",
          "Drawings",
          "Expenses",
          "Income",
          "Liabilities",
          "ContraLiabilities"
        ]
      },
      "AccountStatus": {
        "type": "string",
        "description": "The status of an account\r\n\r\nPossible values:\r\nUndefined (The account is in an unknown state)\nPending (The account is awaiting activation)\nActive (The account is active)\nDeclined (The account could not be activated)\nActivating (The account is currently in the process of being activated at a 3rd party)",
        "enum": [
          "Undefined",
          "Pending",
          "Active",
          "Declined",
          "Activating"
        ],
        "x-enumNames": [
          "Undefined",
          "Pending",
          "Active",
          "Declined",
          "Activating"
        ]
      },
      "CurrencyCode": {
        "type": "string",
        "description": "\r\n\r\nPossible values:\r\nXXX\nXTS\nAED\nAFN\nALL\nAMD\nARS\nAUD\nAZN\nBAM\nBDT\nBGN\nBHD\nBND\nBOB\nBRL\nBTN\nBWP\nBYN\nBZD\nCAD\nCDF\nCHF\nCLP\nCNY\nCOP\nCRC\nCUP\nCZK\nDJF\nDKK\nDOP\nDZD\nEGP\nERN\nETB\nEUR\nGBP\nGEL\nGTQ\nHKD\nHNL\nHRK\nHTG\nHUF\nIDR\nILS\nINR\nIQD\nIRR\nISK\nJMD\nJOD\nJPY\nKES\nKGS\nKHR\nKRW\nKWD\nKZT\nLAK\nLBP\nLKR\nLYD\nMAD\nMDL\nMKD\nMMK\nMNT\nMOP\nMVR\nMXN\nMYR\nNGN\nNIO\nNOK\nNPR\nNZD\nOMR\nPAB\nPEN\nPHP\nPKR\nPLN\nPYG\nQAR\nRON\nRSD\nRUB\nRWF\nSAR\nSEK\nSGD\nSOS\nSYP\nTHB\nTJS\nTMT\nTND\nTRY\nTTD\nTWD\nUAH\nUSD\nUYU\nUZS\nVES\nVND\nXAF\nXCD\nXDR\nXOF\nYER\nZAR",
        "enum": [
          "XXX",
          "XTS",
          "AED",
          "AFN",
          "ALL",
          "AMD",
          "ARS",
          "AUD",
          "AZN",
          "BAM",
          "BDT",
          "BGN",
          "BHD",
          "BND",
          "BOB",
          "BRL",
          "BTN",
          "BWP",
          "BYN",
          "BZD",
          "CAD",
          "CDF",
          "CHF",
          "CLP",
          "CNY",
          "COP",
          "CRC",
          "CUP",
          "CZK",
          "DJF",
          "DKK",
          "DOP",
          "DZD",
          "EGP",
          "ERN",
          "ETB",
          "EUR",
          "GBP",
          "GEL",
          "GTQ",
          "HKD",
          "HNL",
          "HRK",
          "HTG",
          "HUF",
          "IDR",
          "ILS",
          "INR",
          "IQD",
          "IRR",
          "ISK",
          "JMD",
          "JOD",
          "JPY",
          "KES",
          "KGS",
          "KHR",
          "KRW",
          "KWD",
          "KZT",
          "LAK",
          "LBP",
          "LKR",
          "LYD",
          "MAD",
          "MDL",
          "MKD",
          "MMK",
          "MNT",
          "MOP",
          "MVR",
          "MXN",
          "MYR",
          "NGN",
          "NIO",
          "NOK",
          "NPR",
          "NZD",
          "OMR",
          "PAB",
          "PEN",
          "PHP",
          "PKR",
          "PLN",
          "PYG",
          "QAR",
          "RON",
          "RSD",
          "RUB",
          "RWF",
          "SAR",
          "SEK",
          "SGD",
          "SOS",
          "SYP",
          "THB",
          "TJS",
          "TMT",
          "TND",
          "TRY",
          "TTD",
          "TWD",
          "UAH",
          "USD",
          "UYU",
          "UZS",
          "VES",
          "VND",
          "XAF",
          "XCD",
          "XDR",
          "XOF",
          "YER",
          "ZAR"
        ],
        "x-enumNames": [
          "XXX",
          "XTS",
          "AED",
          "AFN",
          "ALL",
          "AMD",
          "ARS",
          "AUD",
          "AZN",
          "BAM",
          "BDT",
          "BGN",
          "BHD",
          "BND",
          "BOB",
          "BRL",
          "BTN",
          "BWP",
          "BYN",
          "BZD",
          "CAD",
          "CDF",
          "CHF",
          "CLP",
          "CNY",
          "COP",
          "CRC",
          "CUP",
          "CZK",
          "DJF",
          "DKK",
          "DOP",
          "DZD",
          "EGP",
          "ERN",
          "ETB",
          "EUR",
          "GBP",
          "GEL",
          "GTQ",
          "HKD",
          "HNL",
          "HRK",
          "HTG",
          "HUF",
          "IDR",
          "ILS",
          "INR",
          "IQD",
          "IRR",
          "ISK",
          "JMD",
          "JOD",
          "JPY",
          "KES",
          "KGS",
          "KHR",
          "KRW",
          "KWD",
          "KZT",
          "LAK",
          "LBP",
          "LKR",
          "LYD",
          "MAD",
          "MDL",
          "MKD",
          "MMK",
          "MNT",
          "MOP",
          "MVR",
          "MXN",
          "MYR",
          "NGN",
          "NIO",
          "NOK",
          "NPR",
          "NZD",
          "OMR",
          "PAB",
          "PEN",
          "PHP",
          "PKR",
          "PLN",
          "PYG",
          "QAR",
          "RON",
          "RSD",
          "RUB",
          "RWF",
          "SAR",
          "SEK",
          "SGD",
          "SOS",
          "SYP",
          "THB",
          "TJS",
          "TMT",
          "TND",
          "TRY",
          "TTD",
          "TWD",
          "UAH",
          "USD",
          "UYU",
          "UZS",
          "VES",
          "VND",
          "XAF",
          "XCD",
          "XDR",
          "XOF",
          "YER",
          "ZAR"
        ]
      },
      "PaginatedEnumerableOfPhysicalAccount": {
        "required": [
          "currentPage",
          "items",
          "totalCount"
        ],
        "type": "object",
        "properties": {
          "currentPage": {
            "$ref": "#/components/schemas/PaginatedEnumerablePage"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PhysicalAccount"
            }
          }
        }
      },
      "PaginatedEnumerableOfVirtualAccount": {
        "required": [
          "currentPage",
          "items",
          "totalCount"
        ],
        "type": "object",
        "properties": {
          "currentPage": {
            "$ref": "#/components/schemas/PaginatedEnumerablePage"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VirtualAccount"
            }
          }
        }
      },
      "PaginatedEnumerablePage": {
        "required": [
          "number",
          "size"
        ],
        "type": "object",
        "properties": {
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "PhysicalAccount": {
        "required": [
          "accountStatus",
          "accountType",
          "createdUTCDateTime",
          "externalId",
          "identifier",
          "name",
          "productId",
          "providerId",
          "providerType",
          "tenantId"
        ],
        "type": "object",
        "properties": {
          "name": {
            "minLength": 1,
            "type": "string",
            "description": "The name of the account\n            "
          },
          "group": {
            "type": "string",
            "description": "Any free-form grouping of accounts\n            "
          },
          "externalId": {
            "type": "string",
            "description": "The unique identifier of the account at the external counter-party who provides it\n            "
          },
          "externalReference": {
            "type": "string",
            "description": "A human-readable account reference provided by an external counter-party\n            "
          },
          "accountNumber": {
            "type": "string",
            "description": "The account number\n            "
          },
          "bic": {
            "type": "string",
            "description": "The Bank Identification Code (BIC)/SWIFT code of the institution providing the account   \n            "
          },
          "branchCode": {
            "type": "string",
            "description": "The branch code of the institution providing the account.      \n            "
          },
          "swiftCode": {
            "type": "string",
            "description": "The SWIFT code of the institution providing the account\n            "
          },
          "accountStatus": {
            "type": "object",
            "description": "The status of the account\n            ",
            "allOf": [
              {
                "$ref": "#/components/schemas/AccountStatus"
              }
            ]
          },
          "statusInformation": {
            "type": "string",
            "description": "Any extra information for the current status of the account\n            "
          },
          "identifier": {
            "type": "string",
            "description": "The primary ID of the physical account\n            ",
            "format": "guid"
          },
          "productId": {
            "minLength": 1,
            "type": "string",
            "description": "The primary ID of the product the account is used for\n            ",
            "format": "guid"
          },
          "providerId": {
            "type": "object",
            "description": "The ID of the Methodic provider which interacts with the account\n            ",
            "allOf": [
              {
                "$ref": "#/components/schemas/ProviderId"
              }
            ]
          },
          "providerType": {
            "type": "object",
            "description": "The type of the Methodic provider which interacts with the account\n            ",
            "allOf": [
              {
                "$ref": "#/components/schemas/ProviderType"
              }
            ]
          },
          "investorId": {
            "type": "string",
            "description": "The identifier of the Investor that owns this account, if this is an Investor Account\n            ",
            "format": "guid"
          },
          "accountType": {
            "type": "object",
            "description": "The type or purpose of the account.",
            "allOf": [
              {
                "$ref": "#/components/schemas/PhysicalAccountType"
              }
            ]
          },
          "tenantId": {
            "minLength": 1,
            "type": "string",
            "description": "The primary ID of the tenant the account is used for\n            ",
            "format": "guid"
          },
          "defaultCurrency": {
            "type": "object",
            "description": "The default currency for the account, used to specify cash transactions when the provider does not indicate the currency explictly\n            ",
            "allOf": [
              {
                "$ref": "#/components/schemas/CurrencyCode"
              }
            ]
          },
          "createdUTCDateTime": {
            "type": "string",
            "format": "date-time"
          }
        },
        "description": "A single real-world account."
      },
      "PhysicalAccountCreationRequest": {
        "required": [
          "accountStatus",
          "accountType",
          "externalId",
          "name",
          "productId",
          "providerId",
          "providerType",
          "tenantId"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "description": "Any free-form grouping of accounts\n            "
          },
          "name": {
            "minLength": 1,
            "type": "string",
            "description": "The name of the account\n            "
          },
          "productId": {
            "minLength": 1,
            "type": "string",
            "description": "The primary ID of the product the account is used for\n            ",
            "format": "guid"
          },
          "externalReference": {
            "type": "string",
            "description": "A human-readable account reference provided by an external counter-party\n            "
          },
          "externalId": {
            "minLength": 1,
            "type": "string",
            "description": "The unique identifier of the account at the external counter-party who provides it\n            "
          },
          "providerId": {
            "type": "string",
            "description": "The ID of the Methodic provider which interacts with the account\n            "
          },
          "providerType": {
            "type": "object",
            "description": "The type of the Methodic provider which interacts with the account\n            ",
            "allOf": [
              {
                "$ref": "#/components/schemas/ProviderType"
              }
            ]
          },
          "accountNumber": {
            "type": "string",
            "description": "The account number\n            "
          },
          "bankCode": {
            "type": "string",
            "description": "The Bank Code of the institution providing the account   \n            "
          },
          "bic": {
            "type": "string",
            "description": "The Bank Identification Code (BIC)/SWIFT code of the institution providing the account   \n            "
          },
          "branchCode": {
            "type": "string",
            "description": "The branch code of the institution providing the account.      \n            "
          },
          "accountStatus": {
            "type": "object",
            "description": "The status of the account\n            ",
            "allOf": [
              {
                "$ref": "#/components/schemas/AccountStatus"
              }
            ]
          },
          "statusInformation": {
            "type": "string",
            "description": "Any extra information for the current status of the account\n            "
          },
          "accountType": {
            "type": "object",
            "description": "The type or purpose of the account.",
            "allOf": [
              {
                "$ref": "#/components/schemas/PhysicalAccountType"
              }
            ]
          },
          "investorId": {
            "type": "string",
            "description": "The identifier of the Investor that owns this account, if this is an Investor Account",
            "format": "guid"
          },
          "tenantId": {
            "type": "string",
            "description": "The primary ID of the Tenant the account is used for\n            ",
            "format": "guid"
          },
          "defaultCurrency": {
            "type": "object",
            "description": "The default currency for the account, used to specify cash transactions when the provider does not indicate the currency explictly\n            ",
            "allOf": [
              {
                "$ref": "#/components/schemas/CurrencyCode"
              }
            ]
          }
        },
        "description": "Information required to create a new physical account\n            "
      },
      "PhysicalAccountModificationRequest": {
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "description": "Any free-form grouping of accounts\n            "
          },
          "name": {
            "type": "string",
            "description": "The name of the account\n            "
          },
          "externalReference": {
            "type": "string",
            "description": "A human-readable account reference provided by an external counter-party\n            "
          },
          "externalId": {
            "type": "string",
            "description": "The unique identifier of the account at the external counter-party who provides it\n            "
          },
          "accountNumber": {
            "type": "string",
            "description": "The account number\n            "
          },
          "bic": {
            "type": "string",
            "description": "The Bank Identification Code (BIC)/SWIFT code of the institution providing the account   \n            "
          },
          "bankCode": {
            "type": "string",
            "description": "The Bank Identification Code (BIC) of the institution providing the account\nDeprecated as it is a duplicate of SWIFTCode, replaced with BIC     \n            "
          },
          "branchCode": {
            "type": "string",
            "description": "The branch code of the institution providing the account\n            "
          },
          "defaultCurrency": {
            "type": "object",
            "description": "The default currency for the account, used to specify cash transactions when the provider does not indicate the currency explictly\n            ",
            "allOf": [
              {
                "$ref": "#/components/schemas/CurrencyCode"
              }
            ]
          }
        },
        "description": "Information required to create a new physical account\n            "
      },
      "PhysicalAccountType": {
        "type": "string",
        "description": "\r\n\r\nPossible values:\r\nUndefined\nOmnibus\nClearing\nInvestor",
        "enum": [
          "Undefined",
          "Omnibus",
          "Clearing",
          "Investor"
        ],
        "x-enumNames": [
          "Undefined",
          "Omnibus",
          "Clearing",
          "Investor"
        ]
      },
      "ProblemDetails": {
        "title": "ProblemDetails",
        "type": "object",
        "properties": {
          "extensions": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "readOnly": true
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "ProviderId": {
        "type": "string",
        "description": ""
      },
      "ProviderType": {
        "type": "string",
        "description": "\r\n\r\nPossible values:\r\nBank\nBroking\nCustody\nEv\nFx\nPayment\nPricing",
        "enum": [
          "Bank",
          "Broking",
          "Custody",
          "Ev",
          "Fx",
          "Payment",
          "Pricing"
        ],
        "x-enumNames": [
          "Bank",
          "Broking",
          "Custody",
          "Ev",
          "Fx",
          "Payment",
          "Pricing"
        ]
      },
      "VirtualAccount": {
        "required": [
          "accountType",
          "accountingPurpose",
          "createdUTCDateTime",
          "identifier",
          "name",
          "physicalAccount",
          "physicalAccountId",
          "virtualAccountStatus"
        ],
        "type": "object",
        "properties": {
          "identifier": {
            "minLength": 1,
            "type": "string",
            "description": "The primary ID of the virtual account.",
            "format": "guid"
          },
          "name": {
            "minLength": 1,
            "type": "string",
            "description": "The name of the account."
          },
          "investorId": {
            "type": "string",
            "description": "The primary ID of the investor who owns the account, if applicable.",
            "format": "guid"
          },
          "physicalAccountId": {
            "minLength": 1,
            "type": "string",
            "description": "The primary ID of the parent physical account.",
            "format": "guid"
          },
          "accountType": {
            "type": "object",
            "description": "The type or purpose of the account.",
            "allOf": [
              {
                "$ref": "#/components/schemas/VirtualAccountType"
              }
            ]
          },
          "physicalAccount": {
            "type": "object",
            "description": "The parent physical account associated with this virtual account.",
            "allOf": [
              {
                "$ref": "#/components/schemas/PhysicalAccount"
              }
            ]
          },
          "accountingPurpose": {
            "type": "object",
            "description": "Determines how the account is treated from an accounting perspective. E.g. Balance sheet vs Income statement and how a balance increase is effected.",
            "allOf": [
              {
                "$ref": "#/components/schemas/AccountingPurpose"
              }
            ]
          },
          "virtualAccountStatus": {
            "type": "object",
            "description": "Dermines if the account is Active, Suspended etc.",
            "allOf": [
              {
                "$ref": "#/components/schemas/VirtualAccountStatus"
              }
            ]
          },
          "externalReference": {
            "type": "string",
            "description": "Reference to be used by Investors when making deposits etc."
          },
          "externalAccountNumber": {
            "type": "string",
            "description": "Account Number to be used by Investors when making deposits etc."
          },
          "createdUTCDateTime": {
            "type": "string",
            "format": "date-time"
          }
        },
        "description": "An account used to track cash flows for a specific purposes within a physical account."
      },
      "VirtualAccountCreationRequest": {
        "required": [
          "accountStatus",
          "accountType",
          "physicalAccountId"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 512,
            "type": "string",
            "description": "The name of the account\n            "
          },
          "investorId": {
            "type": "string",
            "description": "The primary ID of the investor who owns the account\n            ",
            "format": "guid"
          },
          "physicalAccountId": {
            "type": "string",
            "description": "The primary ID of the parent physical account\n            ",
            "format": "guid"
          },
          "accountType": {
            "type": "object",
            "description": "The account type\n            ",
            "allOf": [
              {
                "$ref": "#/components/schemas/VirtualAccountType"
              }
            ]
          },
          "accountStatus": {
            "$ref": "#/components/schemas/VirtualAccountStatus"
          },
          "externalReference": {
            "maxLength": 256,
            "type": "string",
            "description": "Reference to be used by Investors when making deposits etc."
          },
          "externalAccountNumber": {
            "maxLength": 256,
            "type": "string",
            "description": "Account Number to be used by Investors when making deposits etc."
          }
        },
        "description": "Data required to create a new virtual account\n            "
      },
      "VirtualAccountModificationRequest": {
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 512,
            "type": "string",
            "description": "The name of the account\n            "
          },
          "accountStatus": {
            "type": "object",
            "description": "The status of the account\n            ",
            "allOf": [
              {
                "$ref": "#/components/schemas/VirtualAccountStatus"
              }
            ]
          },
          "externalReference": {
            "maxLength": 256,
            "type": "string",
            "description": "Reference to be used by Investors when making deposits etc."
          },
          "externalAccountNumber": {
            "type": "string",
            "description": "Account Number to be used by Investors when making deposits etc."
          }
        },
        "description": "Data used to update an existing account, supply values for those attributes you wish to update.\n            "
      },
      "VirtualAccountStatus": {
        "type": "string",
        "description": "\r\n\r\nPossible values:\r\nUndefined\nActive\nSuspended",
        "enum": [
          "Undefined",
          "Active",
          "Suspended"
        ],
        "x-enumNames": [
          "Undefined",
          "Active",
          "Suspended"
        ]
      },
      "VirtualAccountType": {
        "type": "string",
        "description": "\r\n\r\nPossible values:\r\nUndefined\nIndividualTrader\nTradingAdvisor\nIntroducingBroker\nCustodial\nBeneficiary\nInstitutional\nCompany\nInvestor\nOperational\nReceivables\nMargin\nPayables\nOutgoingOrders\nIncomingOrders\nBuyingPower\nDelinquentReceivables\nOutgoingFx\nIncomingFx\nClearing\nIncomingTransfers\nOutgoingTransfers\nFeeIncome\nUnallocatedCAReceipts\nUnallocatedCAWithdrawals\nFloat\nFloatLoan\nFundedTransfers\nFeeExpense\nWithholding\nSuspense\nInterest\nInterestIncome\nInterestExpense\nTaxWithheld\nPortfolio",
        "enum": [
          "Undefined",
          "IndividualTrader",
          "TradingAdvisor",
          "IntroducingBroker",
          "Custodial",
          "Beneficiary",
          "Institutional",
          "Company",
          "Investor",
          "Operational",
          "Receivables",
          "Margin",
          "Payables",
          "OutgoingOrders",
          "IncomingOrders",
          "BuyingPower",
          "DelinquentReceivables",
          "OutgoingFx",
          "IncomingFx",
          "Clearing",
          "IncomingTransfers",
          "OutgoingTransfers",
          "FeeIncome",
          "UnallocatedCAReceipts",
          "UnallocatedCAWithdrawals",
          "Float",
          "FloatLoan",
          "FundedTransfers",
          "FeeExpense",
          "Withholding",
          "Suspense",
          "Interest",
          "InterestIncome",
          "InterestExpense",
          "TaxWithheld",
          "Portfolio"
        ],
        "x-enumNames": [
          "Undefined",
          "IndividualTrader",
          "TradingAdvisor",
          "IntroducingBroker",
          "Custodial",
          "Beneficiary",
          "Institutional",
          "Company",
          "Investor",
          "Operational",
          "Receivables",
          "Margin",
          "Payables",
          "OutgoingOrders",
          "IncomingOrders",
          "BuyingPower",
          "DelinquentReceivables",
          "OutgoingFx",
          "IncomingFx",
          "Clearing",
          "IncomingTransfers",
          "OutgoingTransfers",
          "FeeIncome",
          "UnallocatedCAReceipts",
          "UnallocatedCAWithdrawals",
          "Float",
          "FloatLoan",
          "FundedTransfers",
          "FeeExpense",
          "Withholding",
          "Suspense",
          "Interest",
          "InterestIncome",
          "InterestExpense",
          "TaxWithheld",
          "Portfolio"
        ]
      }
    },
    "securitySchemes": {
      "oauth2": {
        "type": "oauth2",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://guard.brenda.meth.wtf/authorize",
            "scopes": {}
          }
        }
      }
    }
  },
  "x-generator": "NSwag v13.17.0.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))",
  "x-original-swagger-version": "2.0"
}